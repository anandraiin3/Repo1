{"swagger":"2.0","info":{"version":"1.0.0","title":"Account","contact":{"name":"Axel Grosse"},"license":{"name":""}},"host":"localhost:8080","basePath":"/api","schemes":["http"],"consumes":["application/json","application/x-www-form-urlencoded","multipart/form-data"],"produces":["application/json","application/xml","text/yaml","text/csv","text/plain"],"definitions":{"AccountUser":{"type":"object","properties":{"email":{"type":"string"},"username":{"type":"string"},"first_name":{"type":"string"},"last_name":{"type":"string"},"role":{"type":"string"},"admin":{"type":"boolean"},"external_accounts":{"items":{"type":"string"}},"photo":{"items":{"type":"string"}},"created_at":{"type":"string","format":"date"},"updated_at":{"type":"string","format":"date"},"friend_counts":{"type":"string","format":"json"},"custom_fields":{"type":"string","format":"json"},"user_id":{"type":"string"},"password":{"type":"string"},"password_confirmation":{"type":"string"},"ROS-ID":{"type":"string"}}},"ResponseModel":{"type":"object","required":["code","success","request-id"],"properties":{"code":{"type":"integer","format":"int32"},"success":{"type":"boolean","default":false},"request-id":{"type":"string"},"message":{"type":"string"},"url":{"type":"string"}}},"ErrorModel":{"type":"object","required":["message","code","success","request-id"],"properties":{"code":{"type":"integer","format":"int32"},"success":{"type":"boolean","default":false},"request-id":{"type":"string"},"message":{"type":"string"},"url":{"type":"string"}}}},"paths":{"/accountuser/query":{"get":{"description":"Query accountusers","operationId":"findAccountuserQuery","parameters":[{"name":"limit","in":"query","description":"The number of records to fetch. The value must be greater than 0, and no greater than 1000.","type":"number"},{"name":"skip","in":"query","description":"The number of records to skip. The value must not be less than 0.","type":"number"},{"name":"where","in":"query","description":"Constrains values for fields. The value should be encoded JSON.","type":"string"},{"name":"order","in":"query","description":"A dictionary of one or more fields specifying sorting of results. In general, you can sort based on any predefined field that you can query using the where operator, as well as on custom fields. The value should be encoded JSON.","type":"string"},{"name":"sel","in":"query","description":"Selects which fields to return from the query. Others are excluded. The value should be encoded JSON.","type":"string"},{"name":"unsel","in":"query","description":"Selects which fields to not return from the query. Others are included. The value should be encoded JSON.","type":"string"},{"name":"page","in":"query","description":"Request page number starting from 1.","type":"number"},{"name":"per_page","in":"query","description":"Number of results per page.","type":"number"}],"responses":{"200":{"description":"The query succeeded, and the results are available.","schema":{"type":"array","items":{"$ref":"#/definitions/AccountUser"}}},"401":{"description":"This request requires user authentication, as configured by the server.","schema":{"$ref":"#/definitions/ErrorModel"}},"404":{"description":"No results were found.","schema":{"$ref":"#/definitions/ErrorModel"}},"500":{"description":"Something went wrong during the request; check out the logs on your server.","schema":{"$ref":"#/definitions/ErrorModel"}},"504":{"description":"The request took too long to process, and the server timed it out.","schema":{"$ref":"#/definitions/ErrorModel"}},"default":{"description":"Response from Server","schema":{"$ref":"#/definitions/ResponseModel"}}},"tags":["AccountUser"]}},"/accountuser/count":{"get":{"description":"Count accountusers","operationId":"findAccountuserCount","parameters":[{"name":"limit","in":"query","description":"The number of records to fetch. The value must be greater than 0, and no greater than 1000.","type":"number"},{"name":"skip","in":"query","description":"The number of records to skip. The value must not be less than 0.","type":"number"},{"name":"where","in":"query","description":"Constrains values for fields. The value should be encoded JSON.","type":"string"},{"name":"order","in":"query","description":"A dictionary of one or more fields specifying sorting of results. In general, you can sort based on any predefined field that you can query using the where operator, as well as on custom fields. The value should be encoded JSON.","type":"string"},{"name":"sel","in":"query","description":"Selects which fields to return from the query. Others are excluded. The value should be encoded JSON.","type":"string"},{"name":"unsel","in":"query","description":"Selects which fields to not return from the query. Others are included. The value should be encoded JSON.","type":"string"},{"name":"page","in":"query","description":"Request page number starting from 1.","type":"number"},{"name":"per_page","in":"query","description":"Number of results per page.","type":"number"}],"responses":{"200":{"description":"The count succeeded, and the results are available.","schema":{"type":"integer"}},"401":{"description":"This request requires user authentication, as configured by the server.","schema":{"$ref":"#/definitions/ErrorModel"}},"404":{"description":"No results were found.","schema":{"$ref":"#/definitions/ErrorModel"}},"500":{"description":"Something went wrong during the request; check out the logs on your server.","schema":{"$ref":"#/definitions/ErrorModel"}},"504":{"description":"The request took too long to process, and the server timed it out.","schema":{"$ref":"#/definitions/ErrorModel"}},"default":{"description":"Response from Server","schema":{"$ref":"#/definitions/ResponseModel"}}},"tags":["AccountUser"]}},"/accountuser":{"get":{"description":"Find all accountusers","operationId":"findAccountuser","responses":{"200":{"description":"The find all succeeded, and the results are available.","schema":{"type":"array","items":{"$ref":"#/definitions/AccountUser"}}},"401":{"description":"This request requires user authentication, as configured by the server.","schema":{"$ref":"#/definitions/ErrorModel"}},"404":{"description":"No results were found.","schema":{"$ref":"#/definitions/ErrorModel"}},"500":{"description":"Something went wrong during the request; check out the logs on your server.","schema":{"$ref":"#/definitions/ErrorModel"}},"504":{"description":"The request took too long to process, and the server timed it out.","schema":{"$ref":"#/definitions/ErrorModel"}},"default":{"description":"Response from Server","schema":{"$ref":"#/definitions/ResponseModel"}}},"tags":["AccountUser"]},"post":{"description":"Create a accountuser","operationId":"createAccountuser","parameters":[{"name":"Create","in":"body","description":"Create body","schema":{"type":"object","properties":{"email":{"type":"string","description":"User's email address.\n\nFor security, this field is not shown unless you have admin access.\n"},"username":{"type":"string","description":"User's login name."},"first_name":{"type":"string","description":"User's first name."},"last_name":{"type":"string","description":"User's last name"},"role":{"type":"string","description":"User's role."},"admin":{"type":"boolean","description":"Set to true if the user is an application admin."},"external_accounts":{"type":"array","description":"List of external accounts associated with this user. Each account is represented\nby a Hash with the following properties:\n\n*   `external_id: String`. External account ID.\n*   `external_type: String`. Account type, for example, \"facebook\".\n*   `token: String`. External account login token.\n","items":{"type":"string"}},"photo":{"type":"array","description":"Primary photo for this user.","items":{"type":"string"}},"created_at":{"type":"string","description":"Creation date for this user object.","format":"date"},"updated_at":{"type":"string","description":"Last update time for this user object.","format":"date"},"friend_counts":{"type":"object","description":"Dictionary describing the number of friends the user has.  Possible keys returned are:\n\n  * `requests`: number of pending friend requests.\n  * `friends`: number of friends if two-way friendship is enabled.\n  * `following`: number of friends being followed by the user if one-way friendship is enabled.\n  * `follows`: number of friends following the user if one-way friendship is enabled.\n"},"custom_fields":{"type":"object","description":"User defined fields."},"user_id":{"type":"string","description":"Specifies the owner of object."},"password":{"type":"string","description":"password field"},"password_confirmation":{"type":"string","description":"password_confirmation field"},"ROS-ID":{"type":"string","description":"ROS-ID field"}}}}],"responses":{"201":{"description":"The create succeeded.","headers":{"Location":{"description":"The URL to the newly created instance.","type":"string"}}},"401":{"description":"This request requires user authentication, as configured by the server.","schema":{"$ref":"#/definitions/ErrorModel"}},"404":{"description":"No results were found.","schema":{"$ref":"#/definitions/ErrorModel"}},"500":{"description":"Something went wrong during the request; check out the logs on your server.","schema":{"$ref":"#/definitions/ErrorModel"}},"504":{"description":"The request took too long to process, and the server timed it out.","schema":{"$ref":"#/definitions/ErrorModel"}},"default":{"description":"Response from Server","schema":{"$ref":"#/definitions/ResponseModel"}}},"tags":["AccountUser"]}},"/accountuser/show":{"get":{"description":"Call \"show\" for a accountuser","operationId":"findAccountuserShow","parameters":[{"name":"id","in":"query","description":"ID of the ACL object","type":"string"},{"name":"name","in":"query","description":"Name of the ACL object","type":"string"}],"responses":{"401":{"description":"This request requires user authentication, as configured by the server.","schema":{"$ref":"#/definitions/ErrorModel"}},"404":{"description":"No results were found.","schema":{"$ref":"#/definitions/ErrorModel"}},"500":{"description":"Something went wrong during the request; check out the logs on your server.","schema":{"$ref":"#/definitions/ErrorModel"}},"504":{"description":"The request took too long to process, and the server timed it out.","schema":{"$ref":"#/definitions/ErrorModel"}},"default":{"description":"Response from Server","schema":{"$ref":"#/definitions/ResponseModel"}}},"tags":["AccountUser"]}},"/accountuser/distinct/{field}":{"get":{"description":"Find distinct accountusers","operationId":"findAccountuserDistinctByFIELD","parameters":[{"name":"limit","in":"query","description":"The number of records to fetch. The value must be greater than 0, and no greater than 1000.","type":"number"},{"name":"skip","in":"query","description":"The number of records to skip. The value must not be less than 0.","type":"number"},{"name":"where","in":"query","description":"Constrains values for fields. The value should be encoded JSON.","type":"string"},{"name":"order","in":"query","description":"A dictionary of one or more fields specifying sorting of results. In general, you can sort based on any predefined field that you can query using the where operator, as well as on custom fields. The value should be encoded JSON.","type":"string"},{"name":"sel","in":"query","description":"Selects which fields to return from the query. Others are excluded. The value should be encoded JSON.","type":"string"},{"name":"unsel","in":"query","description":"Selects which fields to not return from the query. Others are included. The value should be encoded JSON.","type":"string"},{"name":"page","in":"query","description":"Request page number starting from 1.","type":"number"},{"name":"per_page","in":"query","description":"Number of results per page.","type":"number"},{"name":"field","in":"path","description":"The field name that must be distinct.","required":true,"type":"string"}],"responses":{"200":{"description":"Distinct fields response.","schema":{"type":"array","items":{"type":"string"},"uniqueItems":true}},"401":{"description":"This request requires user authentication, as configured by the server.","schema":{"$ref":"#/definitions/ErrorModel"}},"404":{"description":"No results were found.","schema":{"$ref":"#/definitions/ErrorModel"}},"500":{"description":"Something went wrong during the request; check out the logs on your server.","schema":{"$ref":"#/definitions/ErrorModel"}},"504":{"description":"The request took too long to process, and the server timed it out.","schema":{"$ref":"#/definitions/ErrorModel"}},"default":{"description":"Response from Server","schema":{"$ref":"#/definitions/ResponseModel"}}},"tags":["AccountUser"]}},"/accountuser/{id}":{"delete":{"description":"Delete a specific accountuser","operationId":"deleteAccountuserByID","parameters":[{"name":"id","in":"path","description":"The accountuser ID","required":true,"type":"string"}],"responses":{"204":{"description":"The delete succeeded."},"401":{"description":"This request requires user authentication, as configured by the server.","schema":{"$ref":"#/definitions/ErrorModel"}},"404":{"description":"No results were found.","schema":{"$ref":"#/definitions/ErrorModel"}},"500":{"description":"Something went wrong during the request; check out the logs on your server.","schema":{"$ref":"#/definitions/ErrorModel"}},"504":{"description":"The request took too long to process, and the server timed it out.","schema":{"$ref":"#/definitions/ErrorModel"}},"default":{"description":"Response from Server","schema":{"$ref":"#/definitions/ResponseModel"}}},"tags":["AccountUser"]},"put":{"description":"Update a specific accountuser","operationId":"updateAccountuserByID","parameters":[{"name":"id","in":"path","description":"The accountuser ID","required":true,"type":"string"},{"name":"Update","in":"body","description":"Update body","schema":{"type":"object","properties":{"email":{"type":"string","description":"User's email address.\n\nFor security, this field is not shown unless you have admin access.\n"},"username":{"type":"string","description":"User's login name."},"first_name":{"type":"string","description":"User's first name."},"last_name":{"type":"string","description":"User's last name"},"role":{"type":"string","description":"User's role."},"admin":{"type":"boolean","description":"Set to true if the user is an application admin."},"external_accounts":{"type":"array","description":"List of external accounts associated with this user. Each account is represented\nby a Hash with the following properties:\n\n*   `external_id: String`. External account ID.\n*   `external_type: String`. Account type, for example, \"facebook\".\n*   `token: String`. External account login token.\n","items":{"type":"string"}},"photo":{"type":"array","description":"Primary photo for this user.","items":{"type":"string"}},"created_at":{"type":"string","description":"Creation date for this user object.","format":"date"},"updated_at":{"type":"string","description":"Last update time for this user object.","format":"date"},"friend_counts":{"type":"object","description":"Dictionary describing the number of friends the user has.  Possible keys returned are:\n\n  * `requests`: number of pending friend requests.\n  * `friends`: number of friends if two-way friendship is enabled.\n  * `following`: number of friends being followed by the user if one-way friendship is enabled.\n  * `follows`: number of friends following the user if one-way friendship is enabled.\n"},"custom_fields":{"type":"object","description":"User defined fields."},"user_id":{"type":"string","description":"Specifies the owner of object."},"password":{"type":"string","description":"password field"},"password_confirmation":{"type":"string","description":"password_confirmation field"},"ROS-ID":{"type":"string","description":"ROS-ID field"}}}}],"responses":{"204":{"description":"The update succeeded."},"401":{"description":"This request requires user authentication, as configured by the server.","schema":{"$ref":"#/definitions/ErrorModel"}},"404":{"description":"No results were found.","schema":{"$ref":"#/definitions/ErrorModel"}},"500":{"description":"Something went wrong during the request; check out the logs on your server.","schema":{"$ref":"#/definitions/ErrorModel"}},"504":{"description":"The request took too long to process, and the server timed it out.","schema":{"$ref":"#/definitions/ErrorModel"}},"default":{"description":"Response from Server","schema":{"$ref":"#/definitions/ResponseModel"}}},"tags":["AccountUser"]},"get":{"description":"Find one accountuser by ID","operationId":"findAccountuserByID","parameters":[{"name":"id","in":"path","description":"The find succeeded, and the results are available.","required":true,"type":"string"}],"responses":{"200":{"description":"AccountUser Response","schema":{"$ref":"#/definitions/AccountUser"}},"401":{"description":"This request requires user authentication, as configured by the server.","schema":{"$ref":"#/definitions/ErrorModel"}},"404":{"description":"No results were found.","schema":{"$ref":"#/definitions/ErrorModel"}},"500":{"description":"Something went wrong during the request; check out the logs on your server.","schema":{"$ref":"#/definitions/ErrorModel"}},"504":{"description":"The request took too long to process, and the server timed it out.","schema":{"$ref":"#/definitions/ErrorModel"}},"default":{"description":"Response from Server","schema":{"$ref":"#/definitions/ResponseModel"}}},"tags":["AccountUser"]}}}}